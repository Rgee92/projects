---

AWSTemplateFormatVersion: 2010-09-09

Description: CloudFront Distribution with Access Logging, an S3 Bucket for serving content to CloudFront and a RDS

Parameters: {}

Resources:

  S3Bucket:
    Type: AWS::S3::Bucket

  CloudFrontDistribution:
    DependsOn: S3Bucket
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: false
          TargetOriginId: S3Bucket
          ViewerProtocolPolicy: allow-all
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Logging:
          Bucket: !GetAtt S3Bucket.DomainName
          IncludeCookies: true
          Prefix: logs/
        Origins:
          - DomainName: !GetAtt S3Bucket.RegionalDomainName
            CustomOriginConfig:
              HTTPPort: 80
              OriginProtocolPolicy: http-only
            Id: S3Bucket

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicInternetRouteTable

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicInternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/25
      AvailabilityZone: !Select [ 0, !GetAZs '']
      VpcId: !Ref VPC

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet01
  
  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.128/25
      AvailabilityZone: !Select [ 1, !GetAZs '']
      VpcId: !Ref VPC

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet02

  RDSParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: DBInstance DB Parameter Group
      Family: mysql8.0

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: db Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 3306
        IpProtocol: tcp
        ToPort: 3306

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for RDS
      SubnetIds:
      - !Ref PublicSubnet01
      - !Ref PublicSubnet02

  RDSDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      DBParameterGroupName: !Ref RDSParameterGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      Engine: MySQL
      EngineVersion: 8.0.17
      MasterUsername: admin
      MasterUserPassword: '{{resolve:ssm-secure:/MasterUserPassword:1}}'
      PubliclyAccessible: true
      StorageType: gp2
      VPCSecurityGroups:
      - !Ref RDSSecurityGroup

Outputs: {}