---

AWSTemplateFormatVersion: '2010-09-09'

Description: Create a VPC containing an Elasticsearch Cluster

Parameters: {}

Mappings: {}

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: 10.0.0.0/26
      VpcId: !Ref VPC

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: 10.0.0.64/26
      VpcId: !Ref VPC

  PublicSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      CidrBlock: 10.0.0.128/26
      VpcId: !Ref VPC

  PublicSubnet04:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 3, !GetAZs "" ]
      CidrBlock: 10.0.0.192/26
      VpcId: !Ref VPC

  PublicInternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet01

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet02

  PublicSubnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet03

  PublicSubnet04RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet04

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicInternetRouteTable

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  ElasticsearchDomainSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Elasticsearch Domain Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/24
      # remove ability to make outbound connections
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 127.0.0.1/32
      VpcId: !Ref VPC

  # Failure to Include ServiceLinkedRole when defining VPCOptions results in the following error
  # a ValidationException: Before you can proceed, you must enable a service-linked role to give Amazon ES permissions to access your VPC.
  ElasticsearchDomainServiceLinkedRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties:
      AWSServiceName: es.amazonaws.com
      Description: Role for ES to access resources in my VPC

  ElasticsearchDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 20
        VolumeType: gp2
      ElasticsearchClusterConfig:
        # DedicatedMasterCount:
        DedicatedMasterEnabled: false
        # DedicatedMasterType: 
        InstanceCount: 1
        InstanceType: t2.small.elasticsearch
        ZoneAwarenessEnabled: false
      EncryptionAtRestOptions:
        # encryption at rest is not available for t2 class Elasticsearch Instance Types
        Enabled: false
      ElasticsearchVersion: 7.1
      VPCOptions:
        SecurityGroupIds:
          - !Ref ElasticsearchDomainSecurityGroup
        SubnetIds:
          - !Ref PublicSubnet01

Outputs: {}
