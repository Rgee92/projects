AWSTemplateFormatVersion: 2010-09-09

Description: Create a VPC containing two subnets an Auto Scaling Group and EFS.

Parameters:
  EFSClientType:
    Description: Instance Type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.micro
    ConstraintDescription: must be an t2.micro
  KeyName:
    Description: KeyName to use for an Instance
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: '64'
  AWSRegionArch2AMI:
    # using Ubuntu AMIs from https://cloud-images.ubuntu.com/locator/ec2/
    # search string for 16.04 LTS: 16.04 lts hvm:ebs-ssd
    us-east-1:
      '64': ami-80861296
    us-west-1:
      '64': ami-2afbde4a
    us-west-2:
      '64': ami-efd0428f

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  PublicInternetRoute:
    Type: AWS::EC2::Route
    DependsOn:
    - InternetGateway
    - PublicInternetRouteTable
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicInternetRouteTable

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicInternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/25
      VpcId: !Ref VPC

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.128/25
      VpcId: !Ref VPC

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet01

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet02

  EFSClientLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      KeyName: !Ref KeyName
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: EFSClientType
          - Arch
      SecurityGroups:
      - Ref: EFSClientSecurityGroup
      InstanceType: !Ref EFSClientType
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -
          availability_zone=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
          region=${AWS::Region}
          efs_id=${EFSFileSystem}
          # mount efs: http://docs.aws.amazon.com/efs/latest/ug/mounting-fs.html
          apt -y update
          apt -y install nfs-common
          mkdir /efs
          mount -t nfs4 -o nfsvers=4.1 $availability_zone.$efs_id.efs.$region.amazonaws.com:/ /efs
          # create a file on each machine
          instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          public_ipv4=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
          # ${!instance_id}
          cat > /efs/${!instance_id}_specs.conf <<EOF
          instance_id=$instance_id
          public_ipv4=$public_ipv4
          EOF

  EFSClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: web Server Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  EFSClientAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Ref: PublicSubnet01
      - Ref: PublicSubnet02
      LaunchConfigurationName: !Ref EFSClientLaunchConfig
      MinSize: 2
      MaxSize: 2
      DesiredCapacity: 2

  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties: {}

  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EFS Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 2049
        ToPort: 2049
        SourceSecurityGroupId: !Ref EFSClientSecurityGroup

  EFSMountTargetSubnet01:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SecurityGroups:
      - Ref: EFSSecurityGroup
      SubnetId: !Ref PublicSubnet01

  EFSMountTargetSubnet02:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SecurityGroups:
      - Ref: EFSSecurityGroup
      SubnetId: !Ref PublicSubnet02

Outputs:
  EFSFileSystemId:
    Description: The EFSFileSystem ID
    Value: !Ref EFSFileSystem
