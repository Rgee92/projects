---

AWSTemplateFormatVersion: '2010-09-09'

Description: Enables multiple AWS Config Rules in AWS Organization

Mappings: {}

Parameters: {}

Resources:

  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub ${AWS::Region}-deliverychannel

  ConfigRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSConfigRole
      Policies:
        - PolicyName: !Sub 'config-policy-${AWS::Region}'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                Resource: !Sub 'arn:aws:s3:::${ConfigBucket}'
              - Effect: Allow
                Action:
                  - s3:PutObject*
                Resource: !Sub 'arn:aws:s3:::${ConfigBucket}/AWSLogs/${AWS::AccountId}/*'
                Condition:
                  StringEquals:
                    s3:x-amz-acl: bucket-owner-full-control
      RoleName: !Sub config-role-${AWS::Region}
  
  # To enable AWS Config, you must create a configuration recorder and a delivery channel
  # You must create a configuration recorder before you can create or update a Config rule. 
  ConfigConfigurationRecorder: 
    Type: AWS::Config::ConfigurationRecorder
    Properties: 
      Name: default
      RecordingGroup: 
        AllSupported: False
        ResourceTypes: 
          - AWS::IAM::User
      RoleARN: !GetAtt [ConfigRole, Arn]

  ConfigDeliveryChannel: 
    Type: AWS::Config::DeliveryChannel
    Properties:
      Name: default
      S3BucketName: !Ref ConfigBucket
      SnsTopicARN: !Ref ConfigTopic

  IAMUserMFAEnabledConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:  
      ConfigRuleName: IAMUserMFARule
      Description: Is MFA Enabled for IAM User?
      MaximumExecutionFrequency: One_Hour
      # can create own rules via lambda or have a list of managed rules here:
      # https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
      Scope: 
        ComplianceResourceTypes: 
          - AWS::IAM::User
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_MFA_ENABLED
    DependsOn: ConfigConfigurationRecorder
 
  ACMCertificateExpirationConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:  
      ConfigRuleName: ACMCertificateExpirationRule
      Description: Is ACM Certificate about to expire?
      # Necessary for acm-certificate-expiration-check
      InputParameters:
        daysToExpiration: 30
      MaximumExecutionFrequency: One_Hour
      # can create own rules via lambda or have a list of managed rules here:
      # https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
      Scope: 
        ComplianceResourceTypes:
          - AWS::CertificateManager::Certificate
      Source:
        Owner: AWS
        SourceIdentifier: ACM_CERTIFICATE_EXPIRATION_CHECK
    DependsOn: ConfigConfigurationRecorder

  S3ServerSideEncryptionConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:  
      ConfigRuleName: S3ServerSideEncryptionRule
      Description: Are S3 Buckets Encrpyted?
      # can create own rules via lambda or have a list of managed rules here:
      # https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html
      Scope: 
        ComplianceResourceTypes:
          - S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED
    DependsOn: ConfigConfigurationRecorder

  ConfigTopic:
    Type: AWS::SNS::Topic
  
  ConfigTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: ConfigTopicPolicy
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: config.amazonaws.com
          Action: SNS:Publish
          Resource: "*"
      Topics:
        - !Ref ConfigTopic

  ConfigSubscription:
    Type: AWS::SNS::Subscription
    Properties: 
      Endpoint: {email-address}
      Protocol: email
      TopicArn: !Ref ConfigTopic
